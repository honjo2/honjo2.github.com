<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | honjo2のブログ]]></title>
  <link href="http://honjo2.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://honjo2.github.io/"/>
  <updated>2013-12-11T11:23:21+09:00</updated>
  <id>http://honjo2.github.io/</id>
  <author>
    <name><![CDATA[honjo2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[マピオンのAPIを使ってOpenStreetMapをiOS/Androidで表示する]]></title>
    <link href="http://honjo2.github.io/blog/2013/12/09/osmonios/"/>
    <updated>2013-12-09T09:38:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/12/09/osmonios</id>
    <content type="html"><![CDATA[<p><em>この投稿は<a href="http://qiita.com/advent-calendar/2013/osm">OpenStreetMap Advent Calendar</a> の9日目の記事です。</em></p>

<p><a href="http://qiita.com/hal_sk/items/e0b3ca53303976bc0235">8日目の記事</a> を拝見させていただいて、マピオンのAPIも紹介したいなと思い書いてみることにしました。</p>

<p>OpenStreetMapをiOSで表示させることができるライブラリはroute-meとMapBoxがありますが、どちらも以下のようなデメリットがあったと記憶しています。</p>

<ul>
<li>タイル表示が遅い

<ul>
<li>対象のタイルを取得する前にzoom-1のタイルを取得し2倍したものを一時的に表示させている（zoom-1のタイルのキャッシュが利用できればそれほど問題ではないが初めての場所だとリクエストの時間が無駄にかかる）</li>
</ul>
</li>
<li>大縮尺でスクロールするとライン、ポリゴン、サークル、ピンなどのレイヤの動きがカクカクする

<ul>
<li>UIScrollViewは内部でCGPointを使っているが、このフィールドはCGFloatであるため32bitの場合float型になり大きな値の計算で誤差が生じてしまっている</li>
</ul>
</li>
</ul>


<p>マピオンのAPIはそのようなことがないです。</p>

<p>ここにOpenStreetMapを表示するコードを書いてもいいのですが、公式サイトにまるまるあるのでリンクを貼らせてもらいます。</p>

<p><a href="http://mapion.github.io/MapionMaps-for-iOS-Sample/document.html#orgmap">OpenStreetMapをiOSで表示するコード</a></p>

<p>Androidもまるまるあるのでリンクを貼るだけにさせてもらいます^^;</p>

<p><a href="http://mapion.github.io/MapionMaps-for-Android-Sample/document.html#osm">OpenStreetMapをAndroidで表示するコード</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidのLogクラスのシンプルなラッパークラス]]></title>
    <link href="http://honjo2.github.io/blog/2013/11/06/log/"/>
    <updated>2013-11-06T21:00:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/11/06/log</id>
    <content type="html"><![CDATA[<p>Androidでログを出力するには<code>Log.d("MainActivity", "ログ");</code>という風に書くと思います。第一引数はタグですがここはクラス名とかを書いておいて第二引数にログを書く感じだと思います。でも毎回、引数を２つも書くの面倒ですよね。どうせなら第二引数のログだけにしたいです。タグはそのクラス名が自動で入れば嬉しいです。そこで作りました。第一引数にログを書くだけです。<code>Log.d("ログ");</code>こんな風に。タグは自動でそれが書かれたクラス名が入ります。これはAndroid開発で個人的に使っていてかなり重宝しています。</p>

<p><div><script src='https://gist.github.com/5696369.js'></script>
<noscript><pre><code>public class Log {

    public static void d(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.d(e.getClassName(), msg);
    }
    
    public static void e(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.e(e.getClassName(), msg);
    }
    
    public static void i(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.i(e.getClassName(), msg);
    }
    
    public static void v(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.v(e.getClassName(), msg);
    }
    
    public static void w(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.w(e.getClassName(), msg);
    }
    
    public static void wtf(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.wtf(e.getClassName(), msg);
    }
}</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
