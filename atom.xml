<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[honjo2のブログ]]></title>
  <link href="http://honjo2.github.io/atom.xml" rel="self"/>
  <link href="http://honjo2.github.io/"/>
  <updated>2013-11-19T23:51:47+09:00</updated>
  <id>http://honjo2.github.io/</id>
  <author>
    <name><![CDATA[honjo2]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS版マピオンからストリートビューを開く]]></title>
    <link href="http://honjo2.github.io/blog/2013/11/19/streetview/"/>
    <updated>2013-11-19T21:45:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/11/19/streetview</id>
    <content type="html"><![CDATA[<p><a href="http://mapion.github.io/MapionMaps-for-iOS-Sample/">iOS版マピオンマップ</a>を使ってマピオンの地図画面を作成し、その地図上を長押しするとストリートビューが開くサンプルを作りました。</p>

<p>画面はこんな感じです。</p>

<p><img src="http://honjo2.github.io/images/2013-11-19/streetview1.png" alt="" />
<img src="http://honjo2.github.io/images/2013-11-19/streetview2.png" alt="" /></p>

<p>地図上を長押しするとその場所のストリートビューが開きます。</p>

<ul>
<li><a href="https://github.com/honjo2/StreetViewSample01">ソース</a></li>
</ul>


<p><a href="https://itunes.apple.com/us/app/mappujapan/id566951794?mt=8">マップJAPAN</a>にもこれと同じようにストリートビューを入れようと思っています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidのLogクラスのシンプルなラッパークラス]]></title>
    <link href="http://honjo2.github.io/blog/2013/11/06/log/"/>
    <updated>2013-11-06T21:00:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/11/06/log</id>
    <content type="html"><![CDATA[<p>Androidでログを出力するには<code>Log.d("MainActivity", "ログ");</code>という風に書くと思います。第一引数はタグですがここはクラス名とかを書いておいて第二引数にログを書く感じだと思います。でも毎回、引数を２つも書くの面倒ですよね。どうせなら第二引数のログだけにしたいです。タグはそのクラス名が自動で入れば嬉しいです。そこで作りました。第一引数にログを書くだけです。<code>Log.d("ログ");</code>こんな風に。タグは自動でそれが書かれたクラス名が入ります。これはAndroid開発で個人的に使っていてかなり重宝しています。</p>

<div><script src='https://gist.github.com/5696369.js'></script>
<noscript><pre><code>public class Log {

    public static void d(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.d(e.getClassName(), msg);
    }
    
    public static void e(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.e(e.getClassName(), msg);
    }
    
    public static void i(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.i(e.getClassName(), msg);
    }
    
    public static void v(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.v(e.getClassName(), msg);
    }
    
    public static void w(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.w(e.getClassName(), msg);
    }
    
    public static void wtf(String msg) {
        StackTraceElement e = new Exception().getStackTrace()[1];
        android.util.Log.wtf(e.getClassName(), msg);
    }
}</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[毎日欠かさずチェックする「する／しない」リスト]]></title>
    <link href="http://honjo2.github.io/blog/2013/11/01/do/"/>
    <updated>2013-11-01T12:03:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/11/01/do</id>
    <content type="html"><![CDATA[<p><a href="http://www.lifehacker.jp/2013/10/131031jack_dorsey.html">Twitter創業者ジャック・ドーシーが毎日欠かさずチェックする「する／しない」リスト</a></p>

<p>この記事を見て僕もいつも心がけてることをまとめてみました。</p>

<div><script src='https://gist.github.com/7260449.js'></script>
<noscript><pre><code># する
- ITの最新情報を見る
- 水を一日2㍑飲む
- 毎日青汁を飲む
- ランニングをする
- 自転車に乗る
- 体幹トレーニングをする
- ジムでマシンをする
- 失敗を恐れない

# しない
- 寝る3時間以内にものを食べない
- ジャンクフードを食べない
- 甘い清涼飲料を飲まない
- 間食しない
- 夜更かししない
- 他人を睨まない</code></pre></noscript></div>


<p>体のことばかりですね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[地理院地図が正式公開されたので地図をOpenStreetMapに変更するブックマークレット作りました]]></title>
    <link href="http://honjo2.github.io/blog/2013/10/31/gsi/"/>
    <updated>2013-10-31T00:20:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/10/31/gsi</id>
    <content type="html"><![CDATA[<p><a href="http://portal.cyberjapan.jp/site/mapuse4/">地理院地図</a>が正式公開されました。右上のコンパスを叩くと距離を測ることができるじゃないですか。これは便利です。Googleマップやマピオンで使いたいところです。そこで地図を変更するブックマークレットを作りました。とりあえず自由に使えるOpenStreetMap版のブックマークレットを公開します。</p>

<h1>手順</h1>

<ol>
<li><a href="http://portal.cyberjapan.jp/site/mapuse4/">地理院地図</a>にアクセス</li>
<li>以下のブックマークレットをアドレスバーに貼り付ける</li>
</ol>


<figure class='code'><figcaption><span>ブックマークレット</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">javascript</span><span class="o">:</span><span class="kd">var</span> <span class="nx">layer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">OpenLayers</span><span class="p">.</span><span class="nx">Layer</span><span class="p">.</span><span class="nx">XYZ</span><span class="p">(</span><span class="s2">&quot;OpenStreetMap&quot;</span><span class="p">,</span> <span class="s2">&quot;http://tile.openstreetmap.org/${z}/${x}/${y}.png&quot;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">attribution</span><span class="o">:</span> <span class="s2">&quot;Map data © OpenStreetMap contributors, CC BY-SA&quot;</span> <span class="p">});</span> <span class="nx">map</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">layer</span><span class="p">);</span> <span class="nx">map</span><span class="p">.</span><span class="nx">setBaseLayer</span><span class="p">(</span><span class="nx">layer</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[キーマカレーのレシピ]]></title>
    <link href="http://honjo2.github.io/blog/2013/10/25/keemacurry/"/>
    <updated>2013-10-25T23:01:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/10/25/keemacurry</id>
    <content type="html"><![CDATA[<p>今日脳内で考えたレシピでキーマカレーを作りました。当然すんなりはできず、色々微調整してなかなか美味しいキーマカレーができました。その修正版レシピを書きます。</p>

<p><img src="http://honjo2.github.io/images/2013-10-25/keemacurry.jpg" alt="" /></p>

<div><script src='https://gist.github.com/7149667.js'></script>
<noscript><pre><code># キーマカレー
- 2人分

# 材料
- サラダ油 80cc ...1
- 玉ねぎ 中2個 ...1
- にんにく 2かけ ...1
- しょうが 10g ...1
- クミン 小さじ1 ...2
- ターメリック 小さじ1 ...2
- コリアンダー 小さじ1 ...2
- パプリカ 小さじ1 ...2
- ガラムマサラ 小さじ1 ...2
- チリーペッパー 小さじ1 ...2
- 合挽き肉 500g ...2
- ホールトマト 1缶 ...3
- プレーンヨーグルト 100g ...3
- 生クリーム 150ml ...3
- 砂糖 小さじ1 ...3
- 塩 小さじ1 ...3
- 塩 少々 ...4
- こしょう 少々 ...4
- パクチー 1束 ...5

# 手順
1. 鍋にサラダ油、みじん切りにした玉ねぎ、にんにく、しょうがを入れきつね色になるまで炒める
2. スパイス、合挽き肉を加え軽く炒める
3. ホールトマト、プレーンヨーグルト、生クリーム、砂糖、塩を加え蓋をせずに中火で時々かき混ぜながら15分煮込む
4. 塩、こしょうで味を整える
5. お皿に盛りつけ、パクチーを添えて完成</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneのホーム画面晒します]]></title>
    <link href="http://honjo2.github.io/blog/2013/10/25/iphonehome/"/>
    <updated>2013-10-25T22:13:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/10/25/iphonehome</id>
    <content type="html"><![CDATA[<p><img src="http://honjo2.github.io/images/2013-10-25/iphonehome.png" alt="" /></p>

<h1>1段目</h1>

<h2>設定</h2>

<ul>
<li>必須ですよね</li>
</ul>


<h2>App Store</h2>

<ul>
<li>必須ですよね</li>
</ul>


<h2>カレンダー</h2>

<ul>
<li>イベントを登録しています</li>
</ul>


<h2>時計</h2>

<ul>
<li>目覚まし時計と料理の時にストップウォッチを使います</li>
</ul>


<h1>2段目</h1>

<h2>電話</h2>

<ul>
<li>必須ですよね</li>
</ul>


<h2>メモ</h2>

<ul>
<li>メモしてます</li>
</ul>


<h2>リマインダー</h2>

<ul>
<li>したいことや行きたいところなどを登録しています</li>
</ul>


<h2>Safari</h2>

<ul>
<li>あまりWebはしませんがなんとなく</li>
</ul>


<h1>3段目</h1>

<h2>写真</h2>

<ul>
<li>写真を確認します</li>
</ul>


<h2>アメッシュ</h2>

<ul>
<li>移動はランor自転車のみの僕は必須です</li>
</ul>


<h2>Instagram</h2>

<ul>
<li>ハマってます</li>
</ul>


<h2>Vine</h2>

<ul>
<li>Instagramでも動画は取れますが、僕はこっち派です</li>
</ul>


<h1>4段目</h1>

<h2>Tweetbot</h2>

<ul>
<li>よくつぶやきます</li>
</ul>


<h2>2chまとめ</h2>

<ul>
<li>面白いです</li>
</ul>


<h1>ドック</h1>

<h2>マップJapan</h2>

<ul>
<li>自家製アプリです。僕はランや自転車であてどもなくうろつくのが趣味なので全画面地図で現在地を確認できる軽いアプリがあればいいんです。これはそれ以外の機能もありますが、それはRejectを防ぐためのものです。本当はもっとシンプルにしたかった。あまりにシンプルだとアップルさんに「それってWebアプリでいいじゃん？」って言われてしまうのです。</li>
</ul>


<h2>カメラ</h2>

<ul>
<li>いろいろ撮ります</li>
</ul>


<h2>メール</h2>

<ul>
<li>必須ですよね</li>
</ul>


<h2>LINE</h2>

<ul>
<li>ヤングですから</li>
</ul>


<hr />

<p>ちなみに2ページ目はプリインアプリや開発中のアプリや会社のアプリが置かれてます。日常的に使うのは1ページ目のアプリだけです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XcodeでTomorrowテーマを設定する]]></title>
    <link href="http://honjo2.github.io/blog/2013/10/24/tomorrow/"/>
    <updated>2013-10-24T15:09:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/10/24/tomorrow</id>
    <content type="html"><![CDATA[<p>Tomorrowテーマはプログラムを書く時に最適なテーマですが、ここではXcodeでTomorrow Nightを設定する方法を書きます。</p>

<h1>手順</h1>

<ol>
<li><code>git clone https://github.com/chriskempson/tomorrow-theme.git</code></li>
<li><code>cd tomorrow-theme</code></li>
<li><code>cp -i Xcode\ 4/Tomorrow\ Night.dvtcolortheme ~/Library/Developer/Xcode/UserData/FontAndColorThemes</code></li>
<li>Xcodeを起動（再起動）しPreferencesのFonts &amp; Colorsタブを開く</li>
<li>Tomorrow Nightを選択する</li>
</ol>


<p><img src="http://honjo2.github.io/images/2013-10-24/tomorrownight.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EmberFireが出た]]></title>
    <link href="http://honjo2.github.io/blog/2013/10/23/emberfire/"/>
    <updated>2013-10-23T13:09:00+09:00</updated>
    <id>http://honjo2.github.io/blog/2013/10/23/emberfire</id>
    <content type="html"><![CDATA[<h1>EmberFireとは？</h1>

<ul>
<li>FirebaseをEmberJSで使えるようにするためのライブラリです。</li>
<li><a href="https://www.firebase.com/blog/2013-10-22-firebase-bindings-for-ember.html">Announcing Firebase Bindings for EmberJS</a></li>
</ul>


<h1>サンプルを動かす</h1>

<ol>
<li><code>git clone https://github.com/firebase/emberFire.git</code></li>
<li><code>cd emberFire</code></li>
<li><p><code>open examples/chat/index.html</code></p>

<p> <img src="http://honjo2.github.io/images/2013-10-23/emberfirechat.png" alt="" /></p></li>
</ol>


<h1>ソース</h1>

<figure class='code'><figcaption><span>index.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>EmberFire Test chat<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">href=</span><span class="s">&quot;https://www.firebase.com/css/example.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;style&gt;</span>
</span><span class='line'>    <span class="nt">button</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">width</span><span class="o">:</span> <span class="m">15</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'>      <span class="k">font-size</span><span class="o">:</span> <span class="m">24px</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nf">#nameInput</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">width</span><span class="o">:</span> <span class="m">20</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nf">#messageInput</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">width</span><span class="o">:</span> <span class="m">60</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="nt">&lt;/style&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/x-handlebars&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">h2</span><span class="o">&gt;</span><span class="nx">EmberFire</span> <span class="nx">Chat</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>    <span class="err">｛｛</span><span class="nx">outlet</span><span class="err">｝｝</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- データを全て表示 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/x-handlebars&quot;</span> <span class="na">data-template-name=</span><span class="s">&quot;index&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="err">｛｛#</span><span class="nx">scrolling</span><span class="o">-</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;messagesDiv&quot;</span> <span class="nx">update</span><span class="o">-</span><span class="nx">when</span><span class="o">=</span><span class="k">this</span><span class="err">｝｝</span>
</span><span class='line'>      <span class="err">｛｛#</span><span class="nx">each</span><span class="err">｝｝</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;&lt;</span><span class="nx">em</span><span class="o">&gt;</span><span class="err">｛｛</span><span class="nx">from</span><span class="err">｝｝</span><span class="o">&lt;</span><span class="err">/em&gt;: ｛｛msg｝｝&lt;/div&gt;</span>
</span><span class='line'>      <span class="err">｛｛</span><span class="o">/</span><span class="nx">each</span><span class="err">｝｝</span>
</span><span class='line'>    <span class="err">｛｛</span><span class="o">/</span><span class="nx">scrolling</span><span class="o">-</span><span class="nx">div</span><span class="err">｝｝</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">form</span> <span class="err">｛｛</span><span class="nx">action</span> <span class="s2">&quot;sendMessage&quot;</span> <span class="nx">on</span><span class="o">=</span><span class="s2">&quot;submit&quot;</span><span class="err">｝｝</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="err">｛｛</span><span class="nx">input</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;nameInput&quot;</span> <span class="nx">value</span><span class="o">=</span><span class="nx">from</span> <span class="nx">placeholder</span><span class="o">=</span><span class="s2">&quot;Name&quot;</span><span class="err">｝｝</span>
</span><span class='line'>      <span class="err">｛｛</span><span class="nx">input</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;messageInput&quot;</span> <span class="nx">value</span><span class="o">=</span><span class="nx">msg</span> <span class="nx">placeholder</span><span class="o">=</span><span class="s2">&quot;Message...&quot;</span><span class="err">｝｝</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">button</span> <span class="nx">type</span><span class="o">=</span><span class="nx">submit</span><span class="o">&gt;</span><span class="nx">Send</span><span class="o">&lt;</span><span class="err">/button&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/form&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/x-handlebars&quot;</span> <span class="na">id=</span><span class="s">&quot;components/scrolling-div&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="err">｛｛</span><span class="nx">yield</span><span class="err">｝｝</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- FireEmberに必要なjs --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://cdn.firebase.com/v0/firebase.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0/handlebars.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="c">&lt;!--&lt;script src=&quot;http://builds.emberjs.com/tags/v1.0.0/ember.js&quot;&gt;&lt;/script&gt;--&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://builds.emberjs.com/ember-latest.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;../../emberfire-latest.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- このアプリ用のjs --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;app.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">App</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Application</span><span class="p">.</span><span class="nx">create</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 使用するFirebaseを指定</span>
</span><span class='line'><span class="nx">App</span><span class="p">.</span><span class="nx">IndexRoute</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">model</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">EmberFire</span><span class="p">.</span><span class="nb">Array</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">ref</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Firebase</span><span class="p">(</span><span class="s2">&quot;https://ember-chat.firebaseio-demo.com/&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// データを保存</span>
</span><span class='line'><span class="nx">App</span><span class="p">.</span><span class="nx">IndexController</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">ArrayController</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">msg</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">from</span><span class="o">:</span> <span class="s2">&quot;Guest&quot;</span> <span class="o">+</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="mi">100</span><span class="p">),</span>
</span><span class='line'>  <span class="nx">actions</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">sendMessage</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">pushObject</span><span class="p">({</span><span class="nx">from</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;from&quot;</span><span class="p">),</span> <span class="nx">msg</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;msg&quot;</span><span class="p">)});</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;msg&quot;</span><span class="p">,</span> <span class="kc">null</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// HTMLを見やすく</span>
</span><span class='line'><span class="nx">App</span><span class="p">.</span><span class="nx">ScrollingDivComponent</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Component</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">scheduleScrollIntoView</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Only run once per tick, once rendering has completed;</span>
</span><span class='line'>    <span class="c1">// avoid flood of scrolls when many updates happen at once</span>
</span><span class='line'>    <span class="nx">Ember</span><span class="p">.</span><span class="nx">run</span><span class="p">.</span><span class="nx">scheduleOnce</span><span class="p">(</span><span class="s2">&quot;afterRender&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="s2">&quot;scrollIntoView&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}.</span><span class="nx">observes</span><span class="p">(</span><span class="s2">&quot;update-when.@each&quot;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">scrollIntoView</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">().</span><span class="nx">scrollTop</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">().</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;scrollHeight&quot;</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h1>データ</h1>

<ul>
<li><p>データはこんな感じで保存されています</p>

<p>  <img src="http://honjo2.github.io/images/2013-10-23/firebasedata.png" alt="" /></p></li>
<li><p>ちなみにこれはデモ用のデータベースなので誰でも見ることができます</p>

<ul>
<li><a href="https://ember-chat.firebaseio-demo.com/">https://ember-chat.firebaseio-demo.com/</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
